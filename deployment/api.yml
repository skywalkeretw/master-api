apiVersion: apps/v1
kind: Deployment

metadata:
  name: api
  namespace: default
  labels:
    app: api

spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      serviceAccountName: deployment-admin-sa
      automountServiceAccountToken: true
      serviceAccount: cluster-deployment-admin-role
      containers:
      - name: api
        image: api:v1
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "2048Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        env:
        - name: RABBITMQ_USERNAME
          valueFrom:
            secretKeyRef:
              name: hello-world-default-user
              key: username
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: hello-world-default-user
              key: password
        - name: RABBITMQ_HOST
          valueFrom:
            secretKeyRef:
              name: hello-world-default-user
              key: host
        - name: RABBITMQ_PORT
          valueFrom:
            secretKeyRef:
              name: hello-world-default-user
              key: port

---

apiVersion: v1
kind: Service

metadata:
  name: api
  namespace: default
spec:
  type: NodePort
  ports:
  - name: http
    nodePort: 30951
    port: 8080
  selector:
    app: api

---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   namespace: default
#   name: deployment-admin-role
# rules:
# - apiGroups: ["coordination.k8s.io"]
#   resources: ["leases"]
#   verbs: ["*"] 

# ---

apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: deployment-admin-sa
  namespace: default

---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: list-deployments
# rules:
# - apiGroups: ["apps"]
#   resources: ["deployments"]
#   verbs: ["list"]

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deployment-admin-sa-cluster-admin
subjects:
- kind: ServiceAccount
  name: deployment-admin-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io


---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deployment-admin-sa-binding
subjects:
- kind: ServiceAccount
  name: deployment-admin-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: list-deployments
  apiGroup: rbac.authorization.k8s.io

---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: deployment-admin-role-binding
#   namespace: default
# subjects:
# - kind: ServiceAccount
#   name: deployment-admin-sa
#   namespace: default
# roleRef:
#   kind: Role
#   name: deployment-admin-role
#   apiGroup: rbac.authorization.k8s.io
  
# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: cluster-deployment-admin-role
#   namespace: default
# rules:
#   - apiGroups:
#       - "coordination.k8s.io"
#     resources:
#       - leases
#     verbs:
#       - '*'

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: cluster-deployment-admin-role
# rules:
#   - apiGroups:
#      - "coordination.k8s.io"
#     resources:
#       - "leases"
#     verbs:
#       - '*'

# ---

# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: cluster-deployment-rbac
# subjects:
# - kind: ServiceAccount
#   name: deployment-admin-sa
#   namespace: default
# roleRef:
#   kind: ClusterRole
#   name: cluster-deployment-admin-role
#   apiGroup: rbac.authorization.k8s.io

  #https://stackoverflow.com/questions/49173838/deployments-apps-is-forbidden-user-systemserviceaccountdefaultdefault-cann